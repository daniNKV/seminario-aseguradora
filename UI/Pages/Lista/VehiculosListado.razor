@using MudBlazor
@using Aplicacion.UseCases.Vehiculos
@inject ListarVehiculosUseCase ListarVehiculos
@inject ModificarVehiculoUseCase ModificarVehiculo
@inject EliminarVehiculoUseCase EliminarVehiculo
@page "/lista/vehiculos"

<MudContainer Fixed="true">
    <MudDataGrid Items="@_vehiculos" xs="12" sm="7" QuickFilter="@QuickFilter">
        <ToolBarContent>
            <MudText Typo="Typo.h4">Vehiculos</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
            
        <Columns>
            <PropertyColumn Property="p => p.Id" Title="ID"/>
            <PropertyColumn Property="p => p.Dominio"/>
            <PropertyColumn Property="x => x.Marca"/>
            <PropertyColumn Property="x => x.Fabricacion"/>
            <HierarchyColumn T="Vehiculo" ButtonDisabledFunc="@(v => v.Titular == null)"/>

            <TemplateColumn CellClass="d-flex justify-start" Title="Acciones">
                <CellTemplate>
                    <MudStack Row Class="-my-4">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" aria-label="add to favorite"></MudIconButton>
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" aria-label="delete"></MudIconButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <ChildRowContent>
            <MudContainer Fixed="true">
                <MudSimpleTable Style="overflow-x: auto;">
                    <thead>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Apellido</th>
                        <th>DNI</th>
                        <th>Dirección</th>
                        <th>Email</th>
                        <th>Acción</th>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@context.Item.Titular?.Id</td>
                            <td>@context.Item.Titular?.Nombre</td>
                            <td>@context.Item.Titular?.Apellido</td>
                            <td>@context.Item.Titular?.Dni</td>
                            <td>@context.Item.Titular?.Direccion</td>
                            <td>@context.Item.Titular?.Email</td>
                            <td><MudButton Size="Size.Small" Variant="Variant.Outlined" Color="Color.Primary">Ver Titular</MudButton></td>
                        </tr>
                    </tbody>
                </MudSimpleTable>
            </MudContainer>
        </ChildRowContent>

        <PagerContent>
            <MudDataGridPager T="Vehiculo" />
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@code { 
    private IEnumerable<Vehiculo>? _vehiculos = new List<Vehiculo>();
    private string? _searchString;
    private bool _sortNameByLength;
    //DialogoConfirmacion dialogo = null!;
    Vehiculo? _vehiculoAEliminar = null;
    
    
    protected override void OnInitialized()
    {
        _vehiculos = ListarVehiculos.Ejecutar();
    }

    private Func<Vehiculo, bool> QuickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (x.Dominio.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (x.Marca.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if ($"{x.Fabricacion} {x.Id}".Contains(_searchString))
            return true;

        return false;
    };
/*
    private void ConfirmarEliminacion(Cliente cli)
    {
        _clienteParaEliminar = cli;
        dialogo.Mensaje = $"¿Desea eliminar al cliente {cli.Nombre} {cli.Apellido}?";
        dialogo.Mostrar();
    }
    private void Eliminar()
    {
        if (_clienteParaEliminar != null)
        {
            EliminarClienteUseCase.Ejecutar(_clienteParaEliminar.Id);
            _lista = ListarClientesUseCase.Ejecutar(); //se actualiza la lista de clientes
        }
    }
*/

}